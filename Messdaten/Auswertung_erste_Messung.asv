% Projekt Sensorsysteme
% Auswertung erste Messungen 

%% Daten einlesen
clc;
clear all;
close all;

file =  importdata("Statisch_1.TXT", ',',2);
% Split the data at $

positionSensor = file.data(:,1);
t = linspace(0.002, 0.002*length(positionSensor), length(positionSensor))'; %Zeitvektor
accelX_1 = file.data(:,3)./2;      % Sensor unten   Due to offset (2G instead 1G we divide /2)
accelX_2 = file.data(:,4)./2;      % Sensor oben    Due to offset (2G instead 1G we divide /2)

% Average or mean value of array

mw_1 = mean(accelX_1)
mw_2 = mean(accelX_2)

% accelX_1_zero = accelX_1 - mw_1;
% accelX_2_zero = accelX_2 - mw_2;
% 
% mwz_1 = mean(accelX_1_zero)
% mwz_2 = mean(accelX_2_zero)


% Load next file

file_1 =  importdata("Messung_1.TXT", ',',2);
% Split the data at $

positionSensor_1 = file_1.data(:,1);
t = linspace(0.002, 0.002*length(positionSensor_1), length(positionSensor_1))'; %Zeitvektor
accelX_11 = file_1.data(:,3)./2;      % Sensor unten   Due to offset (2G instead 1G we divide /2)
accelX_21 = file_1.data(:,4)./2;      % Sensor oben    Due to offset (2G instead 1G we divide /2)


accelX_1_zero = accelX_11 - mw_1;
accelX_2_zero = accelX_21 - mw_2;


figure(1)
plot(t,positionSensor_1);
xlabel('time t in s');
ylabel('distance in mm');
grid on

figure(2)
title("accelerometer plot");
hold on;
grid on;
plot(t,accelX_1_zero);
plot(t,accelX_2_zero);
xlabel('time t in s');
ylabel('acceleration in G');
legend("X-Unten","X-Oben");


windowSize = 5; 
b = (1/windowSize)*ones(1,windowSize);
a = 1;

%% Verarbeitung (1.Gl√§tten ...)
filteredX =  filter(b,a,accelX_1);
figure(3)
hold on 
plot(t,accelX_1);
plot(t,filteredX);